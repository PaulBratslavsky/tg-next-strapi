import type React from "react";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { Header } from "@/components/custom/header";
import { getUserMeLoader } from "@/data/services/user";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function loader() {
  try {
    const user = await getUserMeLoader();
    // Ensure the user data is properly serializable
    return user?.data ? JSON.parse(JSON.stringify(user.data)) : null;
  } catch (error) {
    console.error("Failed to load user:", error);
    return null; // Return null instead of throwing to prevent hydration issues
  }
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const user = await loader();

  return (
    <html lang="en" suppressHydrationWarning={true}>
      <body
        className={`${inter.className} antialiased`}
        suppressHydrationWarning={true}
      >
        <Header user={user} />
        <main className="container mx-auto">{children}</main>
      </body>
    </html>
  );
}
